<?xml version="1.0" encoding="utf-8"?>
<!--*注释-->
<!-- 1.发布后不生成日志可查看Debug中是否有这个文件 -->
<!-- 2.级别划分:(高)OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL(低)-->
<configuration>
  <log4net>
    <!--自定义名称，LogHelper类引用-->
    <logger name="loginfo">
      <!--日志级别-->
      <level value="INFO" />
      <!-- 1.《LogHelper.cs》通过《logger》Name找到此处，
			     2.《appender-ref》属性重定向到Name是《???》的《appender》属性中
				 -->
      <!--相当于调用方法-->
      <appender-ref ref="INFO_logWirte"/>
    </logger>
    <logger name="logerror">
      <!--日志级别-->
      <level value="ERROR" />
      <!-- 1.《LogHelper.cs》通过《logger》Name找到此处，
			     2.《appender-ref》属性重定向到Name是《???》的《appender》属性中
				 -->
      <!--相当于调用方法-->
      <appender-ref ref="ERROR_logWirte"/>
    </logger>
    <root>
    </root>
    <!--自定义名称-->
    <appender name="INFO_logWirte" type="log4net.Appender.RollingFileAppender">


      <!--获取或设置将写入日志的文件的路径-->
      <file value="Log/" />


      <!--获取或设置日期滚动时用于生成文件名的日期模式-->
      <!--rollingStyle==Date-->
      <!--yyyy'年'/MM'月'/dd'日'/HH'时'mm'分''.txt'-->
      <datePattern value="yyyy'年'/MM'月'/dd'日'/'INFO_'HH'时''.txt'" />

      <!--防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

      <!--追加日志内容-->
      <!--当《rollingStyle==Once》此附加程序的 AppendToFile属性设置为false，否则附加程序将附加到单个文件而不是每次打开文件时滚动文件
			-->
      <appendToFile value="true" />

      <!--获取或设置滚动样式-->
      <!--可以为:
			Once:每个程序执行一次滚动文件
			Size:仅根据文件大小滚动文件
			Date:仅基于日期滚动文件
			Composite:根据文件的大小和日期滚动文件(Size || Date的组合)
			-->
      <rollingStyle value="Date" />

      <!--True:日志文件始终为一个，超过《maximumFileSize》时覆盖原文件内容-->
      <!--False:日志文件始终为一个，超过《maximumFileSize》时从新生成新的文件-->

      <!-- 1.如果《rollingStyle==Date》并且是《file》+《datePattern》组合文件名，value必须等于False-->
      <!-- 2.《rollingStyle==Date》根据《datePattern》来滚动文件-->
      <!-- 3.《rollingStyle==Size》根据《maximumFileSize》来滚动文件-->
      <staticLogFileName value="False" />

      <!--可用的单位:KB|MB|GB-->
      <!--rollingStyle==Size-->
      <maximumFileSize value="1KB" />

      <!--生成备份文件以及数量-->
      <!--1.达到《maximumFileSize》时，value>0:生成备份文件(超过最大数从第一个备份文件备份最新日志)；
			根据《staticLogFileName》是生成新文件还是覆盖原文件-->
      <!--2.达到maximumFileSize时，value==0:无备份文件；
			根据《staticLogFileName》是生成新文件还是覆盖原文件-->
      <!--3.达到maximumFileSize时，value==-1:生成备份文件；
			根据《staticLogFileName》是生成新文件还是覆盖原文件-->

      <!--rollingStyle节点为Size时,只能有value个日志-->
      <!--rollingStyle节点为Date时,不产生备份日志-->
      <!--rollingStyle节点为Composite时,每天有value个日志-->
      <maxSizeRollBackups value="-1" />

      <!--输出级别在INFO和ERROR之间的日志-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="INFO" />
        <param name="LevelMax" value="INFO" />
      </filter>

      <!--<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
		<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别：%-5level %n出错类：%logger property: [%property{NDC}] - %n描述：%message%newline"/>
		</layout>-->

      <layout type="WeChat.Com.Log4net.ActionLayoutPattern">
        <conversionPattern value="%newline %n调用时间：%LogModel{LogTime}%n日志级别：%LogModel{LogLevelName}%n系统名称：%LogModel{SystemName}%n请求路径：%LogModel{Path}%n请求类型：%LogModel{Method}%n请求参数：%LogModel{RequestParams}%n响应参数：%LogModel{ResponseParams}%n日志内容：%LogModel{LogBody}%n错误信息：%LogModel{Error}"/>
      </layout>
    </appender>
    <appender name="ERROR_logWirte" type="log4net.Appender.RollingFileAppender">


      <!--获取或设置将写入日志的文件的路径-->
      <file value="Log/" />


      <!--获取或设置日期滚动时用于生成文件名的日期模式-->
      <!--rollingStyle==Date-->
      <!--yyyy'年'/MM'月'/dd'日'/HH'时'mm'分''.txt'-->
      <datePattern value="yyyy'年'/MM'月'/dd'日'/'ERROR''.txt'" />

      <!--防止多线程时不能写Log,官方说线程非安全-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />

      <!--追加日志内容-->
      <!--当《rollingStyle==Once》此附加程序的 AppendToFile属性设置为false，否则附加程序将附加到单个文件而不是每次打开文件时滚动文件
			-->
      <appendToFile value="true" />

      <!--获取或设置滚动样式-->
      <!--可以为:
			Once:每个程序执行一次滚动文件
			Size:仅根据文件大小滚动文件
			Date:仅基于日期滚动文件
			Composite:根据文件的大小和日期滚动文件(Size || Date的组合)
			-->
      <rollingStyle value="Date" />

      <!--True:日志文件始终为一个，超过《maximumFileSize》时覆盖原文件内容-->
      <!--False:日志文件始终为一个，超过《maximumFileSize》时从新生成新的文件-->

      <!-- 1.如果《rollingStyle==Date》并且是《file》+《datePattern》组合文件名，value必须等于False-->
      <!-- 2.《rollingStyle==Date》根据《datePattern》来滚动文件-->
      <!-- 3.《rollingStyle==Size》根据《maximumFileSize》来滚动文件-->
      <staticLogFileName value="False" />

      <!--可用的单位:KB|MB|GB-->
      <!--rollingStyle==Size-->
      <maximumFileSize value="1KB" />

      <!--生成备份文件以及数量-->
      <!--1.达到《maximumFileSize》时，value>0:生成备份文件(超过最大数从第一个备份文件备份最新日志)；
			根据《staticLogFileName》是生成新文件还是覆盖原文件-->
      <!--2.达到maximumFileSize时，value==0:无备份文件；
			根据《staticLogFileName》是生成新文件还是覆盖原文件-->
      <!--3.达到maximumFileSize时，value==-1:生成备份文件；
			根据《staticLogFileName》是生成新文件还是覆盖原文件-->

      <!--rollingStyle节点为Size时,只能有value个日志-->
      <!--rollingStyle节点为Date时,不产生备份日志-->
      <!--rollingStyle节点为Composite时,每天有value个日志-->
      <maxSizeRollBackups value="-1" />

      <!--输出级别在INFO和ERROR之间的日志-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="ERROR" />
        <param name="LevelMax" value="ERROR" />
      </filter>

      <!--<layout type="log4net.Layout.PatternLayout">
			<conversionPattern value="%date [%thread] %-5level %logger - %message%newline"/>
		<conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别：%-5level %n出错类：%logger property: [%property{NDC}] - %n描述：%message%newline"/>
		</layout>-->

      <layout type="WeChat.Com.Log4net.ActionLayoutPattern">
        <conversionPattern value="%newline %n调用时间：%LogModel{LogTime}%n日志级别：%LogModel{LogLevelName}%n系统名称：%LogModel{SystemName}%n请求路径：%LogModel{Path}%n请求类型：%LogModel{Method}%n请求参数：%LogModel{RequestParams}%n响应参数：%LogModel{ResponseParams}%n日志内容：%LogModel{LogBody}%n错误信息：%LogModel{Error}"/>
      </layout>
    </appender>
  </log4net>
</configuration>