@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="/lib/vant/css/index.css" />
    <link href="/ChatGPT_Wx/Style.css" rel="stylesheet" />
    <title></title>
    <style>
        .list {
            padding: 3%;
            border-top: 1px solid #ebebeb;
            width: 94%;
        }

        .User {
            width: 100%;
            margin-bottom: 15px;
        }


        .Message {
            line-height: 28px;
            font-size: 16px;
            margin: 0;
            width: 100%;
            word-wrap: break-word;
            max-width: 100%;
            min-width: 28px;
            text-align: left;
            color: #606266;
        }

        .Time {
            font-size: 10px;
            color: #b3b3b3;
            margin-bottom: 5px;
        }

        .van-image--round {
            background-color: #1989fa;
        }

        .van-sticky--fixed {
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
        @*<van-list v-model="loading"
            direction="up"
            :finished="finished"
            finished-text="没有更多了"
            @@load="onLoad">*@
        <div v-for="(item,index) in list" :key="index">
            <van-sticky v-if="item.Time">
                <van-notice-bar color="#1989fa" background="#ecf9ff" left-icon="clock-o">
                    {{GetDateShow(item.Time)}}
                </van-notice-bar>
            </van-sticky>
            <div class="list">
                <div class="User">
                    <van-row>
                        <van-col span="3">
                            <van-image round
                                       width="2.5rem"
                                       height="2.5rem"
                                       src="https://thirdwx.qlogo.cn/mmopen/vi_32/ZjS8iaWplN1uibmWRyfdfmLIHd8S5JEiah6LTqABxbjjkNZlf5ia2YZ076kib260Bzdp6jeWZ9BqWEsTQEibqGchtLEg/132"></van-image>
                        </van-col>
                        <van-col span="21">
                            <div class="Time">{{item.Time}}</div>
                            <div class="Message">{{item.UserMessage}}</div>
                        </van-col>
                    </van-row>
                </div>
                <div class="AI">
                    <van-row>
                        <van-col span="3">
                            <van-image round
                                       width="2.5rem"
                                       height="2.5rem"
                                       src="https://ai.833586.com:8090/ChatGPT/UploadImages/720ee31b-3270-4b0a-bae0-1e6dfe8eebba.png"></van-image>
                        </van-col>
                        <van-col span="21">
                            <div class="Time">{{item.Time}}</div>
                            <div class="Message">{{item.AIMessage}}</div>
                        </van-col>
                    </van-row>
                </div>
            </div>
        </div>
        @*</van-list>*@
    </div>
    <script src="/ChatGPT_Wx/Global.js"></script>
    <script>
        // 在 #app 标签下渲染一个按钮组件
        new Vue({
            el: '#app',
            data: {
                list: [{
                    Time: '2023-05-27 19:59',
                    UserMessage: '你好',
                    AIMessage: '你好！我是人工智能Chat机器人，我能回答你的所有问题，请和我聊天吧。'
                }],
                loading: false,
                finished: false,
                Times: []
            },
            methods: {
                GetDateShow(Time) {
                    if (Time) {
                        let date = new Date(Time);
                        const year = date.getFullYear() // 获取年
                        const month = date.getMonth() + 1 // 获取月
                        const strDate = date.getDate() // 获取日
                        const YMD = `${year}年${month}月${strDate}日`;
                        return YMD;
                    }
                    return '';
                },
                onLoad() {
                    // 异步更新数据
                    // setTimeout 仅做示例，真实场景中一般为 ajax 请求
                    setTimeout(() => {
                        for (let i = 0; i < 10; i++) {
                            let Item = {
                                Time: '2023-05-27 19:59',
                                UserMessage: '你好' + i,
                                AIMessage: '你好！我是人工智能Chat机器人，我能回答你的所有问题，请和我聊天吧。'
                            };
                            if (i==9) {
                                Item = {
                                    Time: '2023-05-31 19:59',
                                    UserMessage: '你好' + i,
                                    AIMessage: '你好！我是人工智能Chat机器人，我能回答你的所有问题，请和我聊天吧。'
                                };
                            }
                           
                            if (this.Times.indexOf(Item.Time) != -1) {
                                //存在
                                Item.Time = '';
                            } else {
                                this.Times.push(Item.Time);
                            }
                            this.list.unshift(Item);
                        }

                        // 加载状态结束
                        this.loading = false;

                        // 数据全部加载完成
                        if (this.list.length >= 80) {
                            this.finished = true;
                        }
                    }, 1000);
                }
            },
            created() {

            },
            mounted() {
                this.onLoad();
            }
        })
    </script>
</body>
</html>