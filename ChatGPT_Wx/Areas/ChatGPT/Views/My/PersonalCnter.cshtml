@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="/lib/vant/css/index.css" />
    <link href="/ChatGPT_Wx/Style.css" rel="stylesheet" />
    <title></title>
    <style>
        body {
            background-color: #f5f6f7;
        }

        p {
            text-align: center;
        }

        .van-cell .van-cell__left-icon {
            font-size: 20px;
            color: #1989fa;
        }

        .DivHeardBg {
            width: 100%;
            padding: 1rem 0 2rem 0;
            background: linear-gradient(to right, #3cabec, #634bf6);
            margin-bottom: 20px;
        }

        .DivHeard {
            display: flex;
            -webkit-box-align: center;
            align-items: center;
            padding: 15px;
            position: relative;
        }

        .HeardImg {
            width: 50px;
            height: 50px;
            border-radius: 100%;
            overflow: hidden;
            border: 2px solid rgba(255,255,255,0.7);
            margin-right: 0.5rem;
        }

        .HeardName {
            flex: 1;
            min-width: 0;
            font-size: 14px;
            color: #333;
        }

            .HeardName h2 {
                color: rgba(255,255,255,0.9);
                font-weight: normal;
                font-size: 1.1rem;
            }

        .DivCard {
            background-size: 100%;
            background-repeat: no-repeat;
            width: 94%;
            margin: -4rem auto 0.9rem;
            margin-bottom: 0px;
            border-radius: 10px;
            background-color: #424242;
        }

        .CardContent {
            padding: 10px 15px;
            display: flex;
            -webkit-box-align: center;
            align-items: center;
            position: relative;
        }

        .CardContentText {
            -webkit-box-flex: 1;
            -webkit-flex: 1;
            flex: 1;
            min-width: 0;
            font-size: 14px;
            color: #333;
        }

            .CardContentText h3 {
                color: #f1debd;
                font-size: 1.0rem;
                position: relative;
                width: 68%;
                margin: 0;
            }

            .CardContentText p {
                color: #f1debd;
                font-size: 0.9rem;
                margin: 0;
                text-align: left;
            }

        .tops {
            width: 50px;
            font-size: 24px;
            color: #fff;
            font-weight: 900;
            position: absolute;
            top: 0.7rem;
            right: 3rem;
        }

        .CommissionMsg {
            width: 100%;
            height: 55px;
            background-color: #ffffff;
            padding-top: 8px;
        }

        .JE {
            margin-top: 5px;
            margin: 0;
            color: #1989fa;
            font-weight: 600;
        }

        .Text {
            margin: 0;
            margin-top: 5px;
            font-size: 14px;
            color: #5b5b5b;
        }
    </style>
    <style>
        .notice-swipe {
            height: 40px;
            line-height: 40px;
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
        <div class="DivHeardBg">
            <div class="DivHeard">
                <div class="HeardImg">
                    <van-image width="100%"
                               height="100%"
                               :src="UserInfo.WxHeadUrl"></van-image>
                </div>
                <div class="HeardName">
                    <h2 style="margin-bottom: 0px;">ID：{{UserInfo.ID}}</h2>
                    <h2 style="margin-top: 5px;">{{UserInfo.NikeName}}</h2>
                </div>
            </div>
        </div>
        <div class="DivCard">
            <div class="CardContent">
                <div class="CardContentText">
                    <h3 v-if="UserInfo.IsShowTime">会员</h3>
                    <h3 v-else style="color: #cdcdcd;">游客</h3>
                    <p v-if="UserInfo.IsShowTime">将于：{{UserInfo.BeOverdue_VIP}} 到期</p>
                    <p v-else style="color: #cdcdcd;">剩余体验次数{{UserInfo.Free_Second}}</p>
                    <div class="tops" style="color:#f1debd;" v-if="UserInfo.IsShowTime">VIP</div>
                    <div class="tops" style="color:#cdcdcd;" v-else>Visitor</div>
                </div>
            </div>
        </div>
        <div class="CommissionMsg">
            <van-row type="flex" justify="center">
                <van-col span="7" style="border-right: 1px solid #e0e0e0;">
                    <p class="JE">{{JeType.JeA}}元</p>
                    <p class="Text">可提现</p>
                </van-col>
                <van-col span="7">
                    <p class="JE">{{JeType.JeB}}元</p>
                    <p class="Text">申请中</p>
                </van-col>
                <van-col span="7" style="border-left: 1px solid #e0e0e0;">
                    <p class="JE">{{JeType.JeC}}元</p>
                    <p class="Text">已提现</p>
                </van-col>
            </van-row>
        </div>
        <van-cell-group inset title="充值卡密">
            <van-cell title="会员充值" size="large" is-link @@click="GO('/ChatGPT/Pay/PayMember')">
                <template #icon>
                    <van-icon name="gem" class="van-cell__left-icon" color="#ffca6e"></van-icon>
                </template>
            </van-cell>
            <van-cell title="卡密兑换" size="large" is-link @@click="show=true">
                <template #icon>
                    <van-icon name="vip-card" class="van-cell__left-icon"></van-icon>
                </template>
            </van-cell>
        </van-cell-group>
        <van-cell-group inset title="推广赚钱">
            <van-cell title="推广说明" size="large" is-link @@click="RemarkShow = true;">
                <template #icon>
                    <van-icon name="comment-o" class="van-cell__left-icon"></van-icon>
                </template>
            </van-cell>
            <van-cell title="推广海报" size="large" is-link @@click="GO('/ChatGPT/QR/QRCode')">
                <template #icon>
                    <van-icon name="qr" class="van-cell__left-icon"></van-icon>
                </template>
            </van-cell>
            <van-cell title="提现账户" size="large" is-link @@click="FormShow = true">
                <template #icon>
                    <van-icon name="credit-pay" class="van-cell__left-icon"></van-icon>
                </template>
            </van-cell>
            <van-cell title="推广对象" size="large" is-link @@click="GO('/ChatGPT/PushTeam/TeamList')">
                <template #icon>
                    <van-icon name="friends-o" class="van-cell__left-icon"></van-icon>
                </template>
            </van-cell>
            <van-cell title="推广提现" size="large" is-link @@click="GO('/ChatGPT/Commission/Index')">
                <template #icon>
                    <van-icon name="gold-coin-o" class="van-cell__left-icon"></van-icon>
                </template>
            </van-cell>
        </van-cell-group>
        <van-dialog v-model="RemarkShow" title="分销说明">
            <div style="line-height: 25px; padding: 10px;white-space:pre-wrap;word-break: break-all;">@ViewBag.CommissionRemark</div>
        </van-dialog>
        <van-dialog v-model="show" title="卡密兑换" show-cancel-button @@confirm="confirmCard" @@cancel="show=false;inputCard=''">
            <van-cell-group>
                <van-field v-model="inputCard" placeholder="请输入卡密"></van-field>
            </van-cell-group>
        </van-dialog>
        <van-popup v-model="FormShow" position="top" :style="{ height: '230px' }">
            <van-cell-group style="margin-top:30px;">
                <van-form @@submit="onSubmit">
                    <van-field name="radio" label="账户类型">
                        <template #input>
                            <van-radio-group v-model="UserInfo.AccountType" direction="horizontal">
                                <van-radio name="微信">微信</van-radio>
                                <van-radio name="支付宝">支付宝</van-radio>
                            </van-radio-group>
                        </template>
                    </van-field>
                    <van-field v-model="UserInfo.AccountNum" label="收款账户"
                               name="AccountNum"
                               placeholder="请填写收款账户"
                               :rules="[{ required: true, message: '请填写账户' }]"></van-field>
                    <div style="margin: 16px;">
                        <van-button round block type="info" native-type="submit">提交</van-button>
                    </div>
                </van-form>
            </van-cell-group>
        </van-popup>
    </div>
    <div style="height:55px;"></div>
    <script src="/ChatGPT_Wx/Global.js"></script>
    <script>
        // 在 #app 标签下渲染一个按钮组件
        new Vue({
            el: '#app',
            data: {
                active: 0,
                route: [],
                Index: 0,
                TabbarShow: false,
                isHaveBill: false,
                UserInfo: {},
                show: false,
                inputCard: '',
                showPopup: false,
                RemarkShow: false,
                FormShow: false,
                JeType: {}
            },
            methods: {
                GO(url) {
                    window.location.href = url;
                },
                GoUrl(url) {
                    window.parent.HomeVue.HomeHref(url);
                },
                confirmCard() {
                    if (!this.inputCard) {
                        vant.Notify({ type: 'danger', message: '请输入卡密' });
                        return;
                    }
                    AxiosAsync('/ChatGPT/My/ExchangeCDK', 'put', {
                        CDK: this.inputCard
                    }).then(res => {
                        this.show = false;
                        vant.Notify({ type: 'success', message: res, duration: 5000 });
                        this.inputCard = '';
                        this.GetUserInfo();
                    }).catch(err => {
                        vant.Notify({ type: 'danger', message: err });
                    })
                },
                onSubmit(values) {
                    AxiosAsync('/ChatGPT/My/UpdateAccountNum', 'put', this.UserInfo)
                        .then(res => {
                            vant.Notify({ type: 'success', message: '保存成功', duration: 3000 });
                        }).catch(err => {
                            vant.Notify({ type: 'danger', message: err, duration: 2000 });
                        })
                    this.FormShow = false;
                },
                GetMoneyType() {
                    AxiosAsync('/ChatGPT/My/GetMoneyType', 'get', {})
                        .then(res => {
                            this.JeType = res;
                        }).catch(err => {

                        })
                }
            },
            created() {

            },
            async mounted() {
                this.GetMoneyType();
                this.UserInfo = await window.APP_GetUserInfoAsync();
            }
        })
    </script>
</body>
</html>