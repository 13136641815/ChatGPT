@{
    Layout = null;
}
<!DOCTYPE html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="/lib/vant/css/index.css" />
    <title></title>
    <style>
        html {
            background-color: #f5f6f7;
        }

        .ProgrammeItem {
            width: 90px;
            height: 90px;
            border-radius: 5px;
            border: 2px solid #0094ff;
            background-color: #0094ff;
            color: #ffffff;
            float: left;
            margin: 5px;
            text-align: center;
        }

        .Programme {
            width: 90px;
            height: 90px;
            border-radius: 5px;
            border: 2px solid #bebebe;
            float: left;
            margin: 5px;
            text-align: center;
        }

            .Programme .Name {
                color: #838383;
            }

        .Propaganda {
            width: 80%;
            height: 200px;
            background-color: red;
            margin: 0 auto;
            margin-bottom: 20px;
        }

        .groupdiv {
            float: left;
            position: relative;
            left: 50%;
        }
        .van-tab__pane, .van-tab__pane-wrapper {
            width: 100%;
            float: left;
            overflow-x: scroll;
        }
        .van-radio-group {
            float: left;
            position: relative;
        }

        .van-radio__icon {
            display: none;
        }

        .van-radio__label {
            margin-left: 4px;
        }

        .van-radio {
            width: 105px;
            float: left;
        }

        .Name {
            margin: 0;
            margin-top: 10px;
        }

        .Money {
            margin: 0;
            font-size: 18px;
            font-weight: 700;
            margin-top: 10px;
        }

        .MoneyOld {
            margin: 0;
            font-size: 12px;
            text-decoration: line-through;
            color: #a5a5a5;
        }

        .div_content {
            background-color: #ffffff;
            margin-top: 20px;
            width: 100%;
            border-top-left-radius: 20px;
            border-top-right-radius: 20px;
            padding-top: 40px;
            position: fixed;
            height: 65%;
        }

        .bottom {
            width: 100%;
            position: fixed;
            bottom: 0;
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
        <div>
            <div class="title">月度会员</div>
            <div class="desc">
                <p class="yh">最受欢迎</p>
                <p class="money"><i>¥</i><span>30.00</span></p>
                <p class="old">原价¥100.00</p>
            </div>
        </div>
        <van-tabs v-model="active">
            <van-tab title="超级会员">
                <van-radio-group v-model="radio" style="display: flex;">
                    <van-radio :name="Item.ID" shape="square" v-for="(Item,Index) in CommodityList1" :key="Index">
                        <div :class="radio==Item.ID?'ProgrammeItem':'Programme'">
                            <p class="Name">{{Item.CommodityName}}</p>
                            <p class="Money">{{(Item.CommodityPresentPrice/100).toFixed(2)}}元</p>
                            <p class="MoneyOld">{{(Item.CommodityOriginalPrice/100).toFixed(2)}}元</p>
                        </div>
                    </van-radio>
                </van-radio-group>
            </van-tab>
            <van-tab title="普通会员">
                <van-radio-group v-model="radio" style="display: flex;">
                    <van-radio :name="Item.ID" shape="square" v-for="(Item,Index) in CommodityList0" :key="Index">
                        <div :class="radio==Item.ID?'ProgrammeItem':'Programme'">
                            <p class="Name">{{Item.CommodityName}}</p>
                            <p class="Money">{{(Item.CommodityPresentPrice/100).toFixed(2)}}元</p>
                            <p class="MoneyOld">{{(Item.CommodityOriginalPrice/100).toFixed(2)}}元</p>
                        </div>
                    </van-radio>
                </van-radio-group>
            </van-tab>
        </van-tabs>
        <van-button type="info" @@click="Pay">立即开通</van-button>
    </div>
</body>
<!-- 引入 Vue 和 Vant 的 JS 文件 -->
<script src="/ChatGPT_Wx/Global.js"></script>
<script>
    // 在 #app 标签下渲染一个按钮组件
    new Vue({
        el: '#app',
        data: {
            active: 0,
            radio: 1,
            CommodityList0: [],
            CommodityList1: [],
            ButtonEnable: false
        },
        methods: {
            async GetCommodityList() {
                return await AxiosPromise('/ChatGPT/PayPage/GetCommodityList', 'get');
            },
            async Pay() {
                try {
                    const that = this;
                    that.ButtonEnable = true;
                    const res = await AxiosPromise('/ChatGPT/Pay/DownOrder', 'post', {
                        ComID: this.radio
                    }, true);
                    const PayData = res.PayData;
                    const PayConfig = res.PayConfig;
                    const PayRes = await AxiosPromise('/WeChatHome/Pay', 'post', {
                        PayData: PayData,
                        PayConfig: PayConfig
                    });
                    const PayJson = JSON.parse(PayRes);
                    WeixinJSBridge.invoke(
                        'getBrandWCPayRequest', PayJson,//josn串
                        function (res) {
                            if (res.err_msg == "get_brand_wcpay_request:ok") {
                                //支付成功
                                history.back();
                            } else if (res.err_msg == "get_brand_wcpay_request:cancel") {
                                vant.Notify({ type: 'primary', message: '支付取消' });
                                that.ButtonEnable = false;
                            } else {
                                that.ButtonEnable = false;
                                vant.Notify({ type: 'warning', message: '支付失败' + res.err_msg });
                            }
                        }
                    );
                } catch (err) {
                    setTimeout(() => {
                        vant.Toast({
                            icon: 'cross',
                            type: 'fail',
                            message: err,
                            duration: 0,
                            forbidClick: true
                        });
                    }, 600)
                }
            },
        },
        created() {

        },
        async mounted() {
            this.UserInfo = await window.APP_GetUserInfoAsync();
            const ResList = await this.GetCommodityList();
            ResList.forEach(item => {
                if (item.Type == 0) {
                    this.CommodityList0.push(item);
                } else {
                    this.CommodityList1.push(item);
                }
            })
        }
    });
</script>
