@{
    Layout = null;
}
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
    <link rel="stylesheet" href="/lib/vant/css/index.css" />
    <style>
        [v-cloak] {
            display: none;
        }
    </style>
    <title>@ViewBag.Title</title>
</head>

<body>
    <div id="app" v-cloak>
        <van-nav-bar title="推广海报"
                     left-text="返回"
                     left-arrow
                     @@click-left="onClickLeft"></van-nav-bar>
        <div id="QRImg" style="background-color:#FFFFFF">
            <img style="width:100%; object-fit: contain;" src="/ChatGPT_Wx/Img/TG.jpg" />
            <div style="height:20%;width:100%;">
                <van-row>
                    <van-col span="4"></van-col>
                    <van-col span="8" style="position: relative;" v-show="ImgIsOk">
                        <img crossorigin="anonymous" width="30" height="30" style="margin-top: 47.5px; margin-left: 47.5px;position:absolute;z-index:1;" :src="'data:image/png;base64,'+QRCode.Base64Heard" />
                        <img width="125" height="125" :src="'data:image/png;base64,'+QRCode.Base64QR" />
                    </van-col>
                    <van-col span="8">
                        <p style="font-size: 1rem; color: #646464; font-family: FangSong; text-align: center; font-weight: 600; color: red; margin-top: 30px; margin-top:12px;">{{UserInfo.NikeName}}</p>
                        <p style="text-align:center;font-size:28px;margin:0;">
                            <img width="26" height="26" src="/ChatGPT_Wx/Img/SM.jpg" />
                        </p>
                        <p style="font-size: 1rem; color: #646464; font-family: FangSong; text-align: center; font-weight: 600; color: #000; margin-top:12px;">邀请您体验</p>
                    </van-col>
                    <van-col span="4"></van-col>
                </van-row>
            </div>
        </div>
        <van-button type="info" block @@click="OpenImg">生成推广图片</van-button>
    </div>
</body>

</html>
<script src="/lib/vue/vue.js"></script>
<script src="/lib/vant/js/vant.js"></script>
<script src="/lib/axios/axios.js"></script>
<script src="/lib/JQ/jquery.min.js"></script>
<script src="/ChatGPT_Wx/Script/html2canvas.min.js"></script>
<script>
    new Vue({
        el: '#app',
        data: {
            UserInfo: {},
            QRCode: {
                show: false,
                Base64QR: '',
                Base64Heard: '',
                ImgIsOk: false
            }
        },
        methods: {
            OpenImg() {
                let canvas2 = document.createElement("canvas");
                let _canvas = document.querySelector('#QRImg');
                var w = parseInt(window.getComputedStyle(_canvas).width);
                var h = parseInt(window.getComputedStyle(_canvas).height);
                //将canvas画布放大若干倍，然后盛放在较小的容器内，就显得不模糊了
                canvas2.width = w * 4;
                canvas2.height = h * 4;
                canvas2.style.width = w + "px";
                canvas2.style.height = h + "px";
                var scale = 4; //定义任意放大倍数 支持小数
                let context = canvas2.getContext("2d").scale(scale, scale);;
                html2canvas(document.getElementById('QRImg'), {
                    onrendered: function (canvas) {
                        let URL = canvas.toDataURL();
                        vant.ImagePreview([URL]);
                    }
                })
            },
            onClickLeft() {
                window.history.go(-1);
            },
            GetUserInfo() {
                axios({
                    method: 'get',
                    url: '/ChatGPT/My/GetInfoModel',
                    headers: {
                        'Content-Type': 'application/json; charset=UTF-8'
                    },
                }).then(res => {
                    this.UserInfo = res;
                }).catch(err => {

                })
            },
            GetImg() {
                axios({
                    method: 'get',
                    url: '/ChatGPT/My/GetMyQrCode',
                    headers: {
                        'Content-Type': 'application/json; charset=UTF-8'
                    },
                }).then(res => {
                    this.QRCode.Base64QR = res.Base64QR;
                    this.QRCode.Base64Heard = res.Base64Heard;
                    this.ImgIsOk = true;
                }).catch(err => {

                })
            }
        },
        created() {

        },
        mounted() {
            this.GetUserInfo();
            this.GetImg();
        }
    })
</script>