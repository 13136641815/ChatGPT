@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="/lib/vant/css/index.css" />
    <link href="/ChatGPT_Wx/Style.css" rel="stylesheet" />
    <title></title>
    <style>
        body {
            background-color: #f5f6f7;
        }

        .van-image--round img {
            background-color: #1989fa;
        }

        .bot {
            width: 30%;
            padding: 1%;
            padding-bottom: 1%;
            padding-top: 1%;
            float: left;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="app" v-cloak>
        <van-divider :style="{ color: '#1989fa', borderColor: '#1989fa', padding: '0 16px' }">
            以下情景机器人为SVIP会员专享
        </van-divider>
        <div style="width: 100%; float: left; padding-left: 2%;padding-top:2%;">
            <div class="bot" v-for="(Item,Index) in list" :key="Index" @@click="Jump(Item.ID)" v-show="Item.show">
                <div style="width: 100%; background-color: #ffffff; padding-bottom: 10%;">
                    <van-image round
                               width="50%"
                               height="50%"
                               style="padding: 10%; padding-bottom: 2%;"
                               :src="Item.Img"></van-image>
                    <p style="text-align: center; margin: 0px; color: #606266;">{{Item.Name}}</p>
                </div>
            </div>
            @*<div style="width:25%;float:left;" v-for="(Item,Index) in list" :key="Index" @@click="Jump(Item.ID)">
                    <van-image round
                               width="70%"
                               height="70%"
                               style="padding: 15%; padding-bottom: 2%;"
                               :src="Item.Img"></van-image>
                    <p style="text-align: center; margin: 0px; color: #606266;">{{Item.Name}}</p>
                </div>*@
        </div>
        <div style="height:50px;float:left;width:100%"></div>
    </div>
    <script src="/ChatGPT_Wx/Global.js"></script>
    <script>
        // 在 #app 标签下渲染一个按钮组件
        new Vue({
            el: '#app',
            data: {
                list: [],
                UserInfo: {}
            },
            methods: {
                Jump(BotID) {
                    //校验是否SVIP
                    //const res = await window.APP_GetUserInfoAsync();
                    if (this.UserInfo.VIP_Type != 1 && this.UserInfo.Free_Second == 0) {
                        //会员充值提示
                        vant.Dialog.confirm({
                            title: '提示',
                            message: '此项服务为SVIP会员专用！',
                            confirmButtonText: '开通SVIP',
                            cancelButtonText: '取消',
                        }).then(() => {
                            parent.window.HomeVue.HomeHref('/ChatGPT/Pay/PayMember');
                        }).catch(() => {
                            // on cancel
                        });
                    } else {
                        parent.HomeVue.ChangeAI(BotID);
                    }
                },
                GetList() {
                    const that = this;
                    axios({
                        method: 'get',
                        url: '/ChatGPT/Scene/GetBot',
                        headers: {
                            'Content-Type': 'application/json; charset=UTF-8'
                        },
                    }).then((res) => {
                        res.forEach(img => {//图片预加载
                            img.show = false;
                            that.list.push(img);//加入到集合中
                            let imgObj = new Image(); // 创建图片对象
                            imgObj.src = img.Img;
                            imgObj.addEventListener('load', function () { // 这里没有考虑error，实际上要考虑
                                img.show = true;
                            }, false);
                        })
                    }).catch(err => {

                    })
                }
            },
            created() {

            },
            async mounted() {
                this.GetList();
                this.UserInfo = await window.APP_GetUserInfoAsync();
            }
        })
    </script>
</body>
</html>